# -*- coding: utf-8 -*-
"""API_to_DataFrame_practice.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S3C--3_FludWwW7wxWw_CVKq-gXROPir

**Overview of the Task**
"""

# URL and API used: https://api.themoviedb.org/3/movie/popular?api_key=680b41c4ab65d48e8548e2bd8e48eda3&language=en-US&page=10

# Popular Movies Dataset, columns that will be retained in the entire JSON:
# Popularity
# Vote Count
# Original Lang
# Title
# Vote avg
# overview
# Relaease Date

# overall data in the URL = 1000 movies and 7 selected columns

"""**Code**"""

# library used for requests
#!pip install requests

import requests
requests.get("https://api.themoviedb.org/3/movie/popular?api_key=680b41c4ab65d48e8548e2bd8e48eda3&language=en-US&page=1")

#to see data and not just the Response state. Also, store it into a variable called response

response = requests.get("https://api.themoviedb.org/3/movie/popular?api_key=680b41c4ab65d48e8548e2bd8e48eda3&language=en-US&page=1").json()

#looping thru the whole response to take only the required fields

populatiry = []
vote_count = []
original_language = []
title = []
vote_average = []
overview = []
release_date = []

for i in response['results']:
  #print(i['title'], i['vote_average'])
  populatiry.append(i['popularity'])
  vote_count.append(i['vote_count'])
  original_language.append(i['original_language'])
  title.append(i['title'])
  vote_average.append(i['vote_average'])
  overview.append(i['overview'])
  release_date.append(i['release_date'])

d={'title': title, 'overview': overview, 'original_language': original_language, 'release_date': release_date, 'popularity': populatiry, 'vote_average': vote_average,  'vote_count': vote_count }

import pandas as pd
df = pd.DataFrame(d)
df

# to hit the url for multiple pages at once and appending the new fetched results into the dataframe

final = pd.DataFrame()
for j in range(1, 501):
  response = requests.get("https://api.themoviedb.org/3/movie/popular?api_key=680b41c4ab65d48e8548e2bd8e48eda3&language=en-US&page={}".format(j)).json()

  populatiry = []
  vote_count = []
  original_language = []
  title = []
  vote_average = []
  overview = []
  release_date = []

  for i in response['results']:
    #print(i['title'], i['vote_average'])
    populatiry.append(i['popularity'])
    vote_count.append(i['vote_count'])
    original_language.append(i['original_language'])
    title.append(i['title'])
    vote_average.append(i['vote_average'])
    overview.append(i['overview'])
    release_date.append(i['release_date'])

  d={'title': title, 'overview': overview, 'original_language': original_language, 'release_date': release_date, 'popularity': populatiry, 'vote_average': vote_average,  'vote_count': vote_count }
  df = pd.DataFrame(d)

  final = pd.concat([final, df], ignore_index=True)

print(final.shape)
final.head()







